" ------------------------------------------------------------------------------
" Options
" ------------------------------------------------------------------------------

only
filter
screen!

set vicmd=nvim
set syscalls
" set syncregs=main
set trash
set trashdir=$XDG_DATA_HOME/Trash/files,%r/.vifm-Trash-%u,%r/.vifm-Trash
set vifminfo=chistory,shistory,phistory,fhistory,dirstack,registers,bmarks
set sessionoptions=tui,state,tabs,savedirs,dhistory
set history=100
set undolevels=100
set autochpos
set nofollowlinks
set dotfiles
set sortnumbers
set norunexec
set autocd
set vimhelp
set notitle
set timeoutlen=1000
set mintimeoutlen=200
set mouse=mqa
set confirm-=delete
set dotdirs=treeleafsparent
set dirsize=nitems
set shortmess=LMTp
set tabscope=global

" For non-Windows systems
if !has('win')
  set slowfs=curlftpfs,sshfs,nfs,nfs4,cifs
endif

set millerview
set milleroptions=lsize:1,csize:3,rsize:4,rpreview:all

set previewoptions=maxtreedepth:1
set suggestoptions=delay:400,normal,visual,view,otherpane,keys,marks,registers
set tuioptions=p
set uioptions=iodetails
set navoptions=open:dirs
set cpoptions=st
set iooptions+=fastfilecloning

set ignorecase
set smartcase
set nohlsearch
set incsearch
set number
set relativenumber
set numberwidth=2
set scrolloff=4
set nowrap
set wildmenu
set wildstyle=popup
set wildinc=:*

set grepprg="rg --hidden --color=never --line-number %i %a %s"
set findprg="fd --hidden --color=never %p %s"

if system('id -u') == '0'
  let g:root_prefix='root'
else
  let g:root_prefix=''
endif

set timefmt="%Y/%m/%d %H:%M"
set sizefmt=units:iec,space,precision:2
set rulerformat="%l/%S [%x]"
set viewcolumns=-{name},8{size},18{mtime}
set statusline="%2*%[%{g:root_prefix}  %]%0*%A  %u:%-g %d  %E  %1*%[-> %T%]%0* %= [%a / %c]    %P"

" ------------------------------------------------------------------------------
" Commands
" ------------------------------------------------------------------------------

" These are some of the macros that can be used in the action part:
"  %a for user arguments
"  %c for current file under the cursor
"  %C for current file under the cursor of inactive pane
"  %f for selected file(s)
"  %F for selected file(s) of inactive pane
"  %b is the same as %f %F
"  %d for current directory name
"  %D for current directory name of inactive pane
"  %r{x} for list of files in register {x}
"  %m runs the command in a menu window
"  %u uses command's output to build a file list
"  see `:help vifm-macros` and `:help vifm-filename-modifiers` for more

command! df df -h %m 2>/dev/null
command! du du -sh %d %m 2>/dev/null

command! diff nvim -d %f %F
command! gdiff git diff %c

command! zip zip -r %c.zip %f
command! unzip unzip -q %f
command! compress 7z a -t7z -mx=9 -mhe=on -p %a %f
command! extract 7z x -aou -o%a %f

command! mkcd :mkdir %a | cd %a
command! bak :clone %c.bak

command! run !! ./%f
command! make !!make %a

command! reload :write | restart full

command! z :execute 'cd' fnameescape(term('zoxide query -i'))

" Grep literal string under current directory, search matches with fzf, and open in nvim
" Vifm have a builtin command `grep` and show matches in a menu
command! gd :
      \| if '%a' == ''
      \|   echo 'Search pattern required'
      \| else
      \|   let g:res = term("
      \      matches=$(rg --hidden --color=always --line-number -- \"%a\");
      \      if [[ -z $matches ]]; then
      \        echo 'GREP_NO_MATCHES';
      \      else
      \        echo \"$matches\" | sort | fzf --ansi --delimiter=: --smart-case
      \          --prompt 'grep ❯ '
      \          --preview 'bat --number --color=always --paging=never --wrap=never --line-range={2}: {1}'
      \          --bind 'enter:execute([[ -n $TMUX ]] && tmux new-window \"nvim {1} +{2}\" || nvim {1} +{2})';
      \      fi
      \    ")
      \|   if g:res == 'GREP_NO_MATCHES'
      \|     echo 'No matches found'
      \|   endif
      \| endif

" Toggle millerview preview panel
let g:millerview_preview_flag = 1
command! togglepreview :
      \| if g:millerview_preview_flag == 1
      \|   set milleroptions=lsize:1,csize:7
      \|   let g:millerview_preview_flag = 0
      \| else
      \|   set milleroptions=lsize:1,csize:3,rsize:4,rpreview:all
      \|   let g:millerview_preview_flag = 1
      \| endif

" ------------------------------------------------------------------------------
" Command abbreviations
" ------------------------------------------------------------------------------

cabbrev h help
cabbrev fc filter clear

" ------------------------------------------------------------------------------
" Key mappings
" ------------------------------------------------------------------------------

" Start shell in current directory
nnoremap <silent> x :shell<CR>

" Display sorting dialog
nnoremap <silent> ss :sort<CR>

" Toggle showing hidden files
nnoremap <silent> zh :set dotfiles!<CR>

" Select item
nnoremap <silent> <Space> tj

nnoremap <silent> J 5j
nnoremap <silent> K 5k

nnoremap <silent> mk :mkdir<Space>
nnoremap <silent> ft :touch<Space>

nnoremap <silent> ff :filter<Space>
nnoremap <silent> fn :filter!<Space>

nnoremap <silent> q :q<CR>
nnoremap <silent> Q :qa<CR>

" Auto enter navigation mode
" - <C-y> enter/exit nav mode
" - <C-j> exit nav mode while preserving cursor position
" - <Enter>, <Right> select item
" - <C-o>, <Left> go to parent directory
" - <C-n>, <Down> move cursor down
" - <C-p>, <Up> move cursor up
" - <Tab>, <C-i> move to next search match
" - <Shift-Tab> move to previous search match
" Search/Filter mode
" <C-n> / <C-p> navigate through search/filter history
nnoremap <silent> / /<c-y>
" = local filter, e.g. =\.txt$
" zr clear local filter without changing directory
" :filter global filter
nnoremap <silent> = =<c-y>
" Remap for navigation mode
anoremap <C-e> <C-j>

" Open file
nnoremap <silent> o :file<CR>
nnoremap O :
      \| let g:program = input('Open with: ')
      \| if g:program == 'nvim' || g:program == 'vim'
      \|   execute '!' . g:program . ' %c'
      \| else
      \|   execute '!' . g:program . ' %c %i'
      \| endif<CR>

nnoremap <silent> E :!nvim --cmd "lua vim.g.quit_on_empty = false" %d<CR>

" Rename
nnoremap <silent> I cw<C-a>
nnoremap <silent> cc cw<C-u>
nnoremap <silent> A cw
nnoremap <silent> i cw
nnoremap <silent> gi :%rename<CR>

" Toggle wrap setting on ,w key
nnoremap <silent> ,w :set wrap!<CR>

" Resize pane
nnoremap <silent> > :wincmd ><CR>
nnoremap <silent> < :wincmd <<CR>
nnoremap <silent> _ :5 wincmd <<CR>
nnoremap <silent> + :5 wincmd ><CR>

" Prev/Next location
nnoremap <silent> <C-o> :histprev<CR>
nnoremap <silent> <C-i> :histnext<CR>

nnoremap <silent> <C-t> :tabnew | only | cd $HOME<CR>
nnoremap <silent> T :tabnew | only<CR>
nnoremap <silent> gt :tabnext<CR>
nnoremap <silent> gT :tabprevious<CR>
nnoremap <silent> <A-n> :tabnext<CR>
nnoremap <silent> <A-p> :tabprevious<CR>

nnoremap <silent> ! :!
nnoremap <silent> @ :!<space>%f<left><left><left>

nnoremap <silent> ,C :edit $XDG_CONFIG_HOME/vifm/vifmrc<CR>
nnoremap <silent> ,c :write | edit $XDG_CONFIG_HOME/vifm/vifmrc | restart full<CR>

nnoremap <silent> <F2> :rename<CR>
nnoremap <silent> <F3> :!less %f<CR>
nnoremap <silent> <F4> :edit<CR>
nnoremap <silent> <F5> :clone<CR>
nnoremap <silent> <F6> :move<CR>
" In trash (:lstrash) menu, 'r' to restore, 'dd' to delete permanently
nnoremap <silent> <F7> :lstrash<CR>
nnoremap <silent> <F8> :restore<CR>
nnoremap <silent> <F9> :chmod<CR>

" Fzf search and navigate to selection
nnoremap <silent> <C-f> :
      \| let g:fzf_res = term('
      \    fd --type f --hidden --follow
      \    --exclude .git --exclude node_modules --exclude .venv |
      \    fzf --prompt "cwd ❯ " --border=none
      \  ')
      \| if g:fzf_res != ''
      \|   execute 'goto' fnameescape(g:fzf_res)
      \| endif<CR>
nnoremap <silent> F :
      \| let g:fzf_res = term('
      \    fd --type f --hidden --follow --base-directory $HOME --absolute-path
      \    --exclude .git --exclude node_modules --exclude .venv |
      \    fzf --prompt "home ❯ " --border=none
      \    ')
      \| if g:fzf_res != ''
      \|   execute 'goto' fnameescape(g:fzf_res)
      \| endif<CR>

" Grep string under current directory and open the match with nvim
nnoremap <silent> <C-s> :gd<Space>

" Yank current directory path
nnoremap <silent> yd :!echo -n %d | wl-copy %i && echo -n %d | wl-copy -p %i<CR>:echo "Directory path copied"<CR>
" Yank current file path
nnoremap <silent> yf :!echo -n %c:p | wl-copy %i && echo -n %c:p | wl-copy -p %i<CR>:echo "File path copied"<CR>

" Toggle millerview preview panel (Ctrl-/ or ,p)
nnoremap <silent> <C-_> :togglepreview<CR>
nnoremap <silent> ,p :togglepreview<CR>

" Open current directory in the other pane
nnoremap <silent> <A-i> :sync<CR>
" Open directory under cursor in the other pane
nnoremap <silent> <A-o> :sync %c<CR>

" Use e to quit view mode
qnoremap e q

" ------------------------------------------------------------------------------
" Autocommands
" ------------------------------------------------------------------------------

" autocmd DirEnter $HOME/Downloads/**/* setlocal sort=-mtime,dir

" ------------------------------------------------------------------------------
" Bookmarks
" ------------------------------------------------------------------------------

" '<mark> to go to the location
bmark! $HOME/ h home
bmark! $XDG_CONFIG_HOME/ c config
bmark! $HOME/Personal/ p personal
bmark! $HOME/Public/ w public
bmark! $HOME/Documents/ d documents
bmark! $HOME/Downloads/ x downloads

" ------------------------------------------------------------------------------
" File type associations
" ------------------------------------------------------------------------------

" Text
filetype {*.sql,*.desktop,*.service,*.target,*.mdx},<text/*,application/x-sh,application/x-shellscript,application/javascript,application/toml,application/json,application/xml,application/yaml>
      \ nvim %f, vim %f, nvim --clean %f, vim --clean %f
filextype {*.htm,*.html,*.xhtml},<text/html>
      \ nvim %f, vim %f, nvim --clean %f, vim --clean %f, qutebrowser %f %i &, firefox %f %i &
fileviewer {*.htm,*.html},<text/html> w3m %f
fileviewer {*.mdx},<text/*,application/x-sh,application/x-shellscript,application/javascript,application/toml,application/json,application/xml,application/yaml>
      \ bat --color=always --style=plain --paging=never --wrap=never --line-range=:200 %c

" Empty file
filetype <inode/x-empty,application/x-empty,application/x-zerosize> nvim %f, vim %f, nvim --clean %f, vim --clean %f
fileviewer <inode/x-empty,application/x-empty,application/x-zerosize> file --dereference --brief %c

" Video
filextype <video/*,application/vnd.rn-realmedia> mpv %f %i &, ffplay -fs -hide_banner -autoexit %f &
fileviewer <video/*,application/vnd.rn-realmedia> ffprobe -v quiet -hide_banner -show_format -pretty -i %c, #ueberzug#video %px %py %pw %ph %pc #ueberzug#clear

" Audio
filetype <audio/*> mpv --no-video %f %i %s &, ffplay -nodisp -hide_banner -autoexit %c &
fileviewer <audio/*> ffprobe -v quiet -hide_banner -show_format -pretty -i %c

" Images
filetype <image/*> imv %f %i &, swayimg %f %i &
fileviewer <image/gif> identify %c, #ueberzug#image_no_cache %px %py %pw %ph %pc #ueberzug#clear
fileviewer <image/*> identify %c, #ueberzug#image %px %py %pw %ph %pc #ueberzug#clear

" Pdf
filextype {*.pdf},<application/pdf> zathura %f %i &, zathura-sandbox %f %i &
fileviewer {*.pdf},<application/pdf> pdftotext -nopgbrk %c -, #ueberzug#pdf %px %py %pw %ph %pc #ueberzug#clear

" Epub
filextype {*.ebup},<application/epub+zip> zathura %f %i &, zathura-sandbox %f %i &
fileviewer {*.ebup},<application/epub+zip> epub2txt %c -, #ueberzug#epub %px %py %pw %ph %pc #ueberzug#clear

" Office
filetype {*.odt,*.odp,*.dos,*.doc,*.docx,*.xls,*.xlsx,*.pptx,*.ppt},<application/.*opendocument.*,application/vnd.openxmlformats-officedocument.*,application/msword,application/vnd.ms-excel>
      \ libreoffice %f %i &
fileviewer {*.docx},<application/vnd.openxmlformats-officedocument.*> docx2txt %c -
fileviewer {*.doc},<application/msword> catdoc %c
fileviewer <application/.*opendocument.*> catdoc %c

" Zip
filetype <application/zip,application/java-archive>
      \ 7z x -aou %f,
      \ bsdtar -x -f %f,
      \ unzip %f
fileviewer {*.zip,*.jar,*.war,*.ear,*.oxt}
      \ 7z l -ba %c | awk '{print $1 " " $2 " - " $NF}',
      \ bsdtar -tvf %c | awk '{print $6 " " $7 " " $8 " - " $NF}',
      \ unzip -l %c %i

" Tar
filetype {*.tar,*.tar.bz2,*.tbz,*.tbz2,*.tgz,*.tar.gz,*.tar.xz,*.txz,*.tar.zst,*.tzst,*.zst},<application/x-tar,application/x-gzip,application/x-bzip2,application/x-xz,application/zstd>
      \ bsdtar -x -f %f,
      \ 7z x -aou %f,
      \ tar -tf %c,
      \ tar -xf %c
filetype {*.gz},<application/gzip>
      \ 7z x -aou %f,
      \ gzip -dq %f
fileviewer {*.tar},<application/x-tar>
      \ bsdtar -tvf %c | awk '{print $6 " " $7 " " $8 " - " $NF}',
      \ tar -tf %c
fileviewer {*.tgz,*.tar.gz},<application/x-gzip>
      \ bsdtar -tvf %c | awk '{print $6 " " $7 " " $8 " - " $NF}',
      \ tar -tzf %c
fileviewer {*.gz},<application/gzip>
      \ 7z l -ba %c | awk '{print $1 " " $2 " - " $NF}'
fileviewer {*.tar.bz2,*.tbz,*.tbz2},<application/x-bzip2>
      \ bsdtar -tvf %c | awk '{print $6 " " $7 " " $8 " - " $NF}',
      \ tar -tjf %c
fileviewer {*.tar.xz,*.txz},<application/x-xz>
      \ bsdtar -tvf %c | awk '{print $6 " " $7 " " $8 " - " $NF}',
      \ tar -tJf %c
fileviewer {*.tar.zst,*.tzst,*.zst},<application/zstd>
      \ bsdtar -tvf %c | awk '{print $6 " " $7 " " $8 " - " $NF}',
      \ tar -t --zstd -f %c

" Rar
filetype {*.rar},<application/x-rar>
      \ 7z x -aou %f,
      \ bsdtar -x -f %f,
      \ unrar x -o+ %f
fileviewer {*.rar},<application/x-rar>
      \ 7z l -ba %c | awk '{print $1 " " $2 " - " $NF}',
      \ bsdtar -tvf %c | awk '{print $8 " " $6 " " $7 " - " $NF}',
      \ unrar l %c

" 7z
filetype {*.7z},<application/x-7z-compressed>
      \ 7z x -aou %f,
      \ bsdtar -x -f %f
fileviewer {*.7z},<application/x-7z-compressed>
      \ 7z l -ba %c | awk '{print $1 " " $2 " - " $NF}',
      \ bsdtar -tvf %c | awk '{print $8 " " $6 " " $7 " - " $NF}'

" Iso
filetype {*.iso},<application/x-iso.*> FUSE_MOUNT|fuseiso %SOURCE_FILE %DESTINATION_DIR
filetype {*.iso},<application/x-iso.*> iso-info %c

" Database
filetype {*.sqlite,*.sqlite3},<application/vnd.sqlite3> visidata %c
filextype {*.sqlite,*.sqlite3},<application/vnd.sqlite3> sqlitebrowser %c %i &

" Object
filetype {*.o},<application/x-object> nm %f | less

" Man page
filetype <text/troff> man ./%c
fileviewer <text/troff> man ./%c | col -b

" TuDu
filetype {*.tudu} tudu -f %c

" Torrent
filetype {*.torrent},<application/x-bittorrent> ktorrent %f &
fileviewer {*.torrent},<application/x-bittorrent> dumptorrent -v %c, transmission-show %c

" Ssh
filetype *.ssh FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR %FOREGROUND
fileviewer *.ssh ssh-keygen -l -f %c

" Ftp
filetype *.ftp FUSE_MOUNT2|curlftpfs -o ftp_port=-,,disable_eprt %PARAM %DESTINATION_DIR %FOREGROUND

" MD5
filetype *.md5 md5sum -c %f %S

" SHA1
filetype *.sha1 sha1sum -c %f %S

" SHA256
filetype *.sha256 sha256sum -c %f %S

" SHA512
filetype *.sha512 sha512sum -c %f %S

" GPG signature
filetype {*.asc},<application/pgp-signature> !!gpg --verify %c

" Directory
filextype {*/},{.*/} imv %f %i &, xdg-open %f %i &
fileviewer {*/},{.*/} tree -C -L 1 --dirsfirst --noreport -a -q %c

" Fallback
filextype * xdg-open %f %i &
fileviewer * file --mime-type %c
      \ | grep -q "text/" && bat --color=always --style=plain --paging=never --wrap=never --line-range=:200 %c
      \ || file --dereference --brief %c

" ------------------------------------------------------------------------------
" Color scheme
" ------------------------------------------------------------------------------

colorscheme gruvbox nord palenight Default Default-256
highlight Win ctermbg=none
highlight AuxWin ctermbg=none
highlight OtherWin ctermbg=none
highlight LineNr ctermbg=none ctermfg=250
highlight TopLine ctermbg=none ctermfg=246
highlight TopLineSel ctermbg=none cterm=bold
highlight TabLine ctermbg=none
highlight TabLineSel ctermbg=none
highlight User1 ctermfg=cyan
highlight User2 ctermfg=red

" ------------------------------------------------------------------------------
" Icons
" ------------------------------------------------------------------------------

" Generals
set classify+='󰉋 :dir:/,󰞷 :exe:, :reg:, :link:, :?:, ::../::'

" Specific directories
execute "set classify+='󱂵 :://^" . $HOME . "/$//::/'"

set classify+='󱧴 :://^/root/$//::/,
\󱁿 :://^/etc/$//::/,
\󰾰 :://^/dev/$//::/,
\ :://^/mnt/$//::/,
\ :://^/run/media/$//::/,
\ :://^/run/mount/$//::/,
\󱂵 :://^/home/$//::/,
\󱋣 ::lib/,,lib32/,,lib64/::/,
\󰉗 ::bin/,,sbin/::/,
\󰉖 ::tmp/::/,
\󱞊 ::lost+found/::/,
\󰇄 ::desktop/::/,
\󱧶 ::documents/,,document/::/,
\󰉍 ::downloads/,,download/::/,
\󰉏 ::pictures/,,picture/::/,
\󱧺 ::videos/,,video/::/,
\󱍙 ::musics/,,music/::/,
\󰴉 ::programs/,,program/::/,
\󰉌 ::personal/::/,
\󱥾 ::public/,,work/::/,
\󰚝 ::favorite/,,favorites/::/,
\ ::repository/,,repositories/::/,
\ ::clones/::/,
\󰴋 ::sync/::/,
\ ::mount/::/,
\󱊞 ::usb/::/,
\ ::trash/::/,
\󱂷 ::.local/,,.cache/::/,
\󱁿 ::.config/::/,
\󰄤 ::.cert/,,ca-certificates/,,certs/::/,
\󰢬 ::.gnupg/,,.ssh/,,.pki/::/,
\ ::.git/::/,
\ ::.github/::/,
\ ::.gitlab/,,.gitlab-ci/::/,
\ ::.forgejo/::/,
\󱂚 ::.ansible/,,ansible/::/,
\ ::.vim/,,vim/::/,
\ ::.nvim/,,nvim/::/,
\ ::.emacs/,,emacs/,,.emacs.d/::/,
\ ::.conda/,,conda/,,anaconda3/,,miniconda3/::/,
\ ::.yarn/,,.yarncache/,,.yarn-config/::/,
\ ::.docker/,,docker/::/,
\ ::.idea/::/,
\ ::.vscode/::/,
\󰍖 ::.wine/,,wine/::/,
\󰓓 ::.steam/,,steam/::/,
\ ::.aws/,,aws/::/,
\ ::.azure/,,azure/::/,
\󱇶 ::.gcloud/,,gcloud/::/,
\󰇣 ::dropbox/::/,
\󰊶 ::google-drive/::/,
\ ::node_modules/::/,
\󱧮 ::build/,,taregt/,,dist/::/,
\󰣇 ::pacman/,,pacman.d/::/,
\ ::apt/,,apt.conf.d/,,dpkg/::/,
\󰣛 ::dnf/,,yum.repos.d/::/,
\󰣨 ::portage/,,.portage/::/,
\󰏖 ::flatpak/,,.flatpak/,,snap/,,.snap/::/,
\ ::linux/::/,
\󰣇 ::archlinux/,,arch-linux/::/,
\󱘊 ::manjaro/::/,
\ ::debian/::/,
\󰕈 ::ubuntu/::/,
\󰣭 ::mintlinux/,,mint-linux/::/,
\󰣛 ::fedora/::/,
\󱄛 ::rhel/,,redhat/::/,
\ ::rockylinux/,,rocky-linux/::/,
\󰣨 ::gentoo/::/,
\ ::opensuse/::/,
\ ::alpinelinux/,,alpine-linux/::/,
\󱄅 ::nixos/::/,
\󰣠 ::freebsd/::/,
\ ::tmux/::/,
\󰈹 ::firefox/,,mercury/::/,
\ ::chromium/,,google-chrome*/,,thorium/,,bravesoftware/,,qutebrowser/::/,
\󰇩 ::microsoft-edge*/::/'

" Directories
set classify+='󱧼 ::*.d/::/'

" Specific files
set classify+=' ::.profile,,.bashprofile,,bashprofile,,.bash_profile,,bash_profile,,.bash_aliases,,bash_aliases,,.bash_logout,,bash_logout,,.bashrc,,bashrc,,.inputrc,,inputrc,,.zshrc,,zshrc,,.zshenv,,zshenv,,.zprofile,,zprofile::,
\ ::.dmrc,,.jack-settings,,.mime.types,,mime.types,,.nvidia-settings-rc,,.pam_environment,,.selected_editor,,.mimeapps.list,,.xinitrc,,.xinitpurc,,.Xauthority,,.Xdefaults,,.Xresources,,.config,,config,,.user-dirs.dirs,,user-dirs.dirs,,.user-dirs.locale,,user-dirs.locale,,.ds_store,,ds_store::,
\ ::fzfrc,,ripgreprc,,nanorc,,wgetrc,,.muttrc,,muttrc,,.neomuttrc,,neomuttrc,,.stowrc,,stowrc,,.stow-local-ignore,,stow-local-ignore,,.nvmrc,,nvmrc,,lfrc,,htoprc,,zathurarc,,.offlineimaprc,,.msmtprc::,
\ ::.editorconfig,,editorconfig::,
\ ::.vim,,.viminfo,,.vimrc,,vimrc,,.gvimrc,,.vifm,,vifmrc::,
\ ::.tmux.conf,,tmux.conf::,
\ ::readme,,readme.*::,
\󱝀 ::license,,license.*::,
\󰗦 ::copyright,,copying::,
\ ::code_of_conduct,,code_of_conduct.*::,
\󰺻 ::.mailmap::,
\ ::.elpaignore::,
\󰊢 ::.ignore,,.gitignore,,.gitconfig,,.gitmodules,,.gitattributes::,
\ ::.gitlab-ci.yml,,.gitlab-ci.yaml::,
\ ::dockerfile,,.dockerignore,,docker-compose.yml::,
\ ::helmfile.yaml,,helmfile.yml::,
\󰯙 ::meson.build,,meson.options,,meson_options.txt::,
\󱃾 ::kubeconfig.*::,
\ ::makefile,,makefile.*,,justfile::,
\ ::jenkinsfile::,
\ ::vagrantfile::,
\ ::procfile::,
\ ::.codecov.yml,,codecov.yml,,.codecov.yaml,,codecov.yaml::,
\ ::.travis.yml,,travis.yml,,.travis.yaml,,travis.yaml::,
\󱄅 ::.flake.lock,,flake.lock::,
\ ::.npmrc,,npmrc,,.npmignore,,package.json,,package-lock.json::,
\ ::.yarnrc,,yarnrc,,yarn.lock::,
\ ::.condarc,,condarc::,
\ ::gulpfile.js,,gulpfile.coffee,,gulpfile.ls::,
\ ::gruntfile.js,,gruntfile.coffee,,gruntfile.ls::,
\ ::swagger.json,,swagger.yml,,swagger.yaml::,
\ ::openapi.json,,openapi.yml,,openapi.yaml::,
\󰮆 ::log,,log.old,,.xsession-errors,,.xsession-errors.old::,
\󰌾 ::.password-store::,
\󱆅 ::known_hosts::,
\󰣇 ::pacman.conf::,
\󰣛 ::dnf.conf::,
\ ::ledger::,
\󰇣 ::dropbox::'

" File extensions
set classify+=' ::*.afm,,*.bdf,,*.eot,,*.fnt,,*.fon,,*.otf,,*.pcf,,*.pfa,,*.pfb,,*.pfm,,*.psf,,*.ttc,,*.ttf,,*.type1,,*.woff,,*.woff2::,
\ ::*.3fr,,*.ari,,*.arw,,*.avif,,*.bay,,*.bmp,,*.cap,,*.cr2,,*.cr3,,*.crw,,*.dcr,,*.dcs,,*.dng,,*.drf,,*.eip,,*.eps,,*.erf,,*.exr,,*.fff,,*.gif,,*.gpr,,*.hdr,,*.heic,,*.heif,,*.ico,,*.icns,,*.iiq,,*.j2k,,*.jfif,,*.jif,,*.jp2,,*.jpe,,*.jpeg,,*.jpx,,*.jpg,,*.jxl,,*.k25,,*.kdc,,*.mdc,,*.mef,,*.mos,,*.mrw,,*.nef,,*.obm,,*.orf,,*.pbm,,*.pef,,*.pgm,,*.pjpg,,*.png,,*.pnm,,*.ppm,,*.ptx,,*.pxn,,*.qoi,,*.r3d,,*.raf,,*.raw,,*.rgb,,*.rw2,,*.rwl,,*.rwz,,*.sr2,,*.srf,,*.srw,,*.svg,,*.svgz,,*.tga,,*.tif,,*.tiff,,*.webp,,*.x3f,,*.xbm,,*.xcf,,*.xpm,,*.xwd::,
\ ::*.3g2,,*.3gp,,*.amv,,*.asf,,*.av1,,*.avi,,*.f4a,,*.f4b,,*.f4p,,*.f4v,,*.fli,,*.flv,,*.gifv,,*.h26[0-9],,*.m2ts,,*.m1v,,*.m2v,,*.m4v,,*.m4u,,*.mjpg,,*.mjpeg,,*.mkv,,*.mng,,*.mov,,*.movie,,*.mp4,,*.mp4v,,*.mpe,,*.mpeg,,*.mpg,,*.mpg4,,*.mpv,,*.mts,,*.mxf,,*.nsv,,*.ogv,,*.qt,,*.rm,,*.rmvb,,*.roq,,*.rrc,,*.svi,,*.vob,,*.webm,,*.wmv,,*.yuv::,
\󰸪 ::*.aac,,*.aax,,*.ac3,,*.aif,,*.aifc,,*.aiff,,*.alac,,*.amr,,*.anx,,*.ape,,*.asf,,*.au,,*.aup,,*.awb,,*.axa,,*.dss,,*.dts,,*.flac,,*.iklax,,*.m2a,,*.m4a,,*.m4b,,*.m4p,,*.mid,,*.midi,,*.mka,,*.mogg,,*.mp3,,*.mpa,,*.mpc,,*.oga,,*.ogg,,*.ogx,,*.opus,,*.ra,,*.ram,,*.rm,,*.snd,,*.spx,,*.tta,,*.vox,,*.wav,,*.weba,,*.wma,,*.wv::,
\ ::*.7z,,*.ace,,*.alz,,*.ar,,*.boz,,*.br,,*.bz,,*.bz2,,*.cab,,*.cpio,,*.gem,,*.gz,,*.gzip,,*.lh,,*.lha,,*.lz,,*.lz4,,*.lzh,,*.lzma,,*.lzo,,*.lzop,,*.pak,,*.rar,,*.rz,,*.sfx,,*.tar,,*.tbz,,*.tbz2,,*.tgz,,*.tlz,,*.txz,,*.tzst,,*.xar,,*.xbps,,*.xz,,*.z,,*.zip,,*.zoo,,*.zpaq,,*.zst::,
\󰏔 ::*.pkg.tar.zst,,*.deb,,*.udeb,,*.rpm,,*.eopkg,,*.pisi,,*.flatpak,,*.snap,,*.appimage,,*.appimage.zs-old::,
\ ::*.hdd,,*.iso,,*.img,,*.omg,,*.ova,,*.ovf,,*.qcow,,*.qcow2,,*.qcow3,,*.vdi,,*.vhd,,*.vhdx,,*.vmdk,,*.wim,,*.swm,,*.esd,,*.rom::,
\󰨖 ::*.ass,,*.srt,,*.ssa,,*.vtt::,
\󰴠 ::*.torrent,,*.m3u,,*.m3u8,,*.pls,,*.xspf::,
\ ::*.txt,,*.text,,*.rtf,,*.rtx::,
\ ::*.md,,*.mdown,,*.markdown,,*.mdx,,*.rmd,,*.qmd::,
\󰴓 ::*.adoc,,*.asciidoc,,*.etx,,*.textile,,*.rdoc,,*.ronn,,*.rst,,*.fountain::,
\ ::*.org::,
\ ::*.norg::,
\ ::*.tex,,*.latex,,*.bib,,*.bibtex,,*biblatex::,
\ ::*.docx,,*.doc,,*.docm,,*.dotx,,*.dotm,,*.wiz,,*.odt,,*.ott,,*.oth,,*.otm,,*.fodt,,*.wps,,*.pages,,*.wpd::,
\ ::*.xlsx,,*.xlm,,*.xls,,*.xlsm,,*.xlsmx,,*.xltx,,*.xlt,,*.xltm,,*.xla,,*.xll,,*.xlam,,*.csv,,*.tsv,,*.psv,,*.odc,,*.otc,,*.ods,,*.ots,,*.fods,,*.et::,
\ ::*.pptx,,*.ppt,,*.pptm,,*.pot,,*.potx,,*.potm,,*.pps,,*.ppsx,,*.ppsm,,*.ppam,,*.sldx,,*.sldm,,*.odp,,*.otp,,*.fodp,,*.dps::,
\ ::*.odf,,*.odft::,
\ ::*.pdf,,*.djv,,*.djvu::,
\󰂺 ::*.epub,,*.mobi,,*.fb2*,,*.azw::,
\󱉟 ::*.cbr,,*.cbz::,
\ ::*.vim,,*.vifm::,
\ ::*.rss,,*.atom::,
\󰩧 ::*.license,,*.lic::,
\󰄤 ::*.cer,,*.crt,,*.csr,,*.der,,*.pem,,*.cat::,
\󱆅 ::*.gpg,,*.pgp,,*.pub,,*.key,,*.p12,,*.pfx,,*.sec,,*.jks::,
\󰷼 ::*.asc,,*.sig::,
\󰌾 ::*.kdbx,,*.kdb,,*.1pux::,
\ ::*.sum,,*.md5,,*.sha512::,
\󱀰 ::*.enc,,*.age::,
\󱊧 ::*.hex::,
\󰟨 ::*.sock,,*.socket::,
\󰟥 ::*.fifo::,
\󰓓 ::*.vdf::,
\󰖄 ::*.wallet::,
\󰃭 ::*.ics,,*.ical,,*.icalendar::,
\ ::*.vcf::,
\󰲽 ::*.service,,*.target,,*.rules::,
\󱤥 ::*.timer::,
\ ::*.desktop::,
\󰇟 ::*.mmd,,*.mermaid,,*.drawio,,*.gv::,
\󱦹 ::*.pcx,,*.odg,,*.sketch::,
\ ::*.fig::,
\ ::*.blend::,
\ ::*.ma,,*.mb::,
\󰻬 ::*.dwg,,*.dxf,,*.iges,,*.skp,,*.stp,,*.slddrw::,
\󰮄 ::*.3dm,,*.3ds,,*.3mf,,*.amf,,*.c4d,,*.catpart,,*.cgm,,*.dae,,*.dds,,*.dwf,,*.fbx,,*.gdl,,*.glb,,*.gltf,,*.ipt,,*.jt,,*.max,,*.mtl,,*.obj,,*.sab,,*.sat,,*.sldprt,,*.step,,*.stl,,*.vrml,,*.x_t,,*.x_b::,
\ ::*.ai::,
\ ::*.psb,,*.psd::,
\ ::*.aep::,
\ ::*.ino::,
\ ::*.pbxproj,,*.xcodeproj,,*.xcworkspace::,
\ ::*.iml::,
\ ::*.sln,,*.suo,,*.csproj,,*.dbproj,,*.vbproj,,*.vcproj,,*.vcxproj,,*.vsix,,*.vsz::,
\ ::*.net::,
\ ::*.exe,,*.msi::,
\󰣖 ::*.drv,,*.sys,,*.vxd::,
\ ::*.url,,*.webloc::,
\ ::*.lnk::,
\ ::*.app,,*.dmg,,*.pkg,,*.mpkg,,*.ipa::,
\󰀲 ::*.apk,,*.aab,,*.aar,,*.apkm,,*.xapk,,*.dex::,
\ ::*.crx::,
\󰈹 ::*.xpi::'

set classify+='󰒓 ::.*.conf,,*.conf,,.*.config,,*.config,,.*.cfg,,*.cfg,,.*.cnf,,*.cnf,,.*.ini,,*.ini,,*.inf,,*.properties::,
\ ::*.dhall,,*.hcl,,*.nomad::,
\󰫧 ::*.env,,*.env.*,,*.environment::,
\󰮆 ::*.log,,*.xlog,,*.dmp,,*.history,,.*_history,,*_history::,
\ ::*.bak,,*.old,,*.orig::,
\󰱿 ::*.so,,*.so.*,,*.lib,,*.dll,,*.a,,*.o,,*.dylib,,*.elf,,*.obj::,
\󱀱 ::*.out::,
\󱧉 ::*.lock::,
\󰾵 ::*.swp::,
\󰐱 ::*.mod::,
\󰉹 ::*.list::,
\󰆊 ::*.diff,,*.patch::,
\󰆼 ::*.db,,*.pdb,,*.sql,,*.sqlite,,*.sqlite3,,*.sqlitedb,,*.realm,,*.mdb,,*.accdb,,*.accde,,*.accdr,,*.accdt::,
\󰮆 ::*.dat,,*.bin,,*.cue::,
\ ::.*.ash,,*.ash,,.*.awk,,*.awk,,.*.bash,,*.bash,,.*.csh,,*.csh,,.*.elvish,,*.elvish,,.*.fish,,*.fish,,.*.ksh,,*.ksh,,.*.mksh,,*.mksh,,.*.nu,,*.nu,,.*.pdksh,,*.pdksh,,.*.sh,,*.sh,,.*.tcsh,,*.tcsh,,.*.xsh,,*.xsh,,.*.yash,,*.yash,,.*.zsh,,*.zsh::,
\󰨊 ::*.ps1,,*.psd1,,*.psm1,,*.bat,,*.cmd::,
\ ::*.dockerfile::,
\󱃾 ::*.k8s.yml,,*.k8s.yaml::,
\ ::.*.json,,*.json,,*.jsonl,,*.ndjson,,.*jsonnet,,*.webmanifest::,
\ ::.*.yml,,*.yml,,.*.yaml,,*.yaml::,
\ ::.*.toml,,*.toml::,
\󱅲 ::*.proto,,*.avsc,,*.bond,,*.capnp,,*.fbs,,*.thrift::,
\󱩅 ::*.parquet,,*.feather,,*.avro,,*.orc::,
\ ::*.uml,,*.puml,,*.plantuml::,
\ ::*.mk::,
\ ::*.cmake::,
\󰝴 ::*.ninja::,
\ ::*.j2,,*.jinja,,*.jinja2::,
\󰯙 ::*.meson::,
\ ::*.bzl::,
\ ::*.gradle,,*.gradle.kts::,
\󰌠 ::*.py,,*.pyc,,*.pyd,,*.pyo,,*.pyx,,*.pxd,,*.pkl,,*.pyi,,*.whl::,
\ ::*.ipynb::,
\ ::*.npy,,*.npz::,
\󱋶 ::*.recordio,,*.tfrecord::,
\ ::*.pt,,*.pth::,
\ ::*.tflite::,
\ ::*.keras::,
\󰿋 ::*.ckpt,,*.onnx,,*.h5,,*.hdf5::,
\ ::*.php::,
\ ::*.elm::,
\ ::*.res,,*.resi::,
\󰌞 ::*.js,,*.cjs,,*.wmls,,*.mjs,,*.jsx,,*.ejs::,
\󰛦 ::*.ts,,*.tsx::,
\ ::*.asar::,
\󰡄 ::*.vue::,
\ ::*.svelte::,
\ ::*.astro::,
\ ::*.prisma::,
\ ::*.htm,,*.html,,*.xhtml,,*.wml,,*.haml,,*.cshtml,,*.asp,,*.aspx,,*.slim,,*.pug,,*.twig,,*.marko::,
\ ::*.liquid::,
\ ::*.njk::,
\ ::*.css,,*.less::,
\ ::*.sass,,*.scss::,
\ ::*.styl::,
\󰗀 ::*.xml,,*.xsd,,*.dtd,,*.xsl,,*.xslt,,*.xbel,,*.xaml,,*.xlf,,*.xliff,,*.doap,,*.plist::,
\ ::*.hx,,*.hxml::,
\󱗞 ::*.mustache,,*.handlebars,,*.hbs::,
\ ::*.c,,*.cp,,*.h,,*.inl::,
\ ::*.c++,,*.cpp,,*.cxx,,*.cc,,*.cp,,*.hh,,*.hpp,,*.hxx,,*.cu,,*.cuh::,
\ ::*.cs::,
\󰲒 ::*.hs,,*.lhs::,
\󰢱 ::*.lua,,*.rock,,*.rockspec::,
\ ::*.jl::,
\ ::*.go::,
\ ::*.zig::,
\ ::*.dart::,
\󱘗 ::*.rs,,*.rlib::,
\ ::*.java,,*.jsp,,*.class,,*.jar,,*.war,,*.ear::,
\ ::*.scala::,
\ ::*.groovy::,
\󱈙 ::*.kt,,*.kts::,
\󰴭 ::*.rb,,*.erb,,*.rake,,*.gemspec::,
\ ::*.ex,,*.exs,,*.eex::,
\ ::*.clj,,*.cljs,,*.cljc,,*.cljx,,*.edn::,
\ ::*.pl,,*.pm,,*.t,,*.plx,,*.raku,,*.rakumod::,
\ ::*.pl,,*.pro::,
\ ::*.ml,,*.mli,,*.opam::,
\ ::*.re,,*.rei::,
\ ::*.f#,,*.fs,,*.fsi,,*.fsscript,,*.fsx::,
\ ::*.f,,*.for,,*.ftn,,*.f77,,*.f90,,*.f95,,*.f03,,*.f08::,
\󰟔 ::*.r,,*.rdata,,*.rds,,*.rda::,
\ ::*.erl,,*.hrl,,*.beam::,
\ ::*.lisp,,*.lsp::,
\ ::*.el::,
\ ::*.m,,*.mlx,,*.mat,,*.slx,,*.mdl::,
\ ::*.swift::,
\ ::*.vb,,*.vbs,,*.vbproj::,
\ ::*.purs::,
\ ::*.nim,,*.nims::,
\󰬗 ::*.pas,,*.pp::,
\ ::*.cr::,
\ ::*.adb,,*.ads::,
\ ::*.vala,,*.vapi::,
\ ::*.sol::,
\ ::*.vy::,
\ ::*.ahk::,
\󰡷 ::*.graphql,,*.gql::,
\󱄅 ::*.nix::,
\󱁢 ::*.tf,,*.tfvars,,*.tfstate,,*.tftest.*::,
\󰈹 ::*.xul::,
\ ::*.coffee::,
\ ::*.razor::,
\ ::*.feature::,
\ ::*.nupkg,,*.nupack::,
\󰅴 ::*.in,,*.inc,,*.rc,,*.def,,*.spec,,*.po,,*.test,,*.ac,,*.m4,,*.qml,,*.cl,,*.tcl,,*.rkt,,*.scm,,*.y,,*.odin,,*.pony,,*.gleam::,
\󰘷 ::*.wgsl,,*.hlsl,,*.glsl,,*.vert,,*.frag::,
\ ::*.ll::,
\󱤓 ::*.asm,,*.s,,*.qasm::,
\ ::*.wasm,,*.wat::,
\󰚯 ::*.unity,,*.unitypackage::,
\󰦱 ::*.uasset::,
\ ::*.gd,,*.godot,,*.tres,,*.tscn::,
\󰚗 ::*.kicad_pcb,,*.kicad_sch,,*.sch,,*.brd,,*.gbr,,*.ger,,*.gtl,,*.gbl,,*.ucf,,*.xdc::,
\󰘚 ::*.vhd,,*.vhdl,,*.vho,,*.vlg,,*.verilog,,*.v,,*.sv,,*.sdc,,*.gds,,*.gdsii::'
