# Sway man page: https://man.archlinux.org/man/sway.1.en

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Terminal emulator
set $term alacritty
# Browser
set $browser firefox
# GUI file manager
set $filemanager thunar
# GUI file searcher
set $filesearcher fsearch
# Application launcher
set $menu bemenu-run

font pango:Hack Nerd Font 10

### Config only commands
#
# Disable window border & Only show window title within tabbed mode
default_border none
default_floating_border none
titlebar_padding 1
titlebar_border_thickness 0
gaps outer 0
gaps inner 0

# Hide window title when only one instance
hide_edge_borders --i3 none

# Enable xwayland
# xwayland enable

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg $HOME/Pictures/wallpapers/wallpaper.jpg fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

output eDP-1 {
    scale 1.5 resolution 2160x1440 position 0,0
    allow_tearing yes
    max_render_time off
}
for_window [all] allow_tearing yes

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

# exec swayidle -w \
#          timeout 900 'brightnessctl set 5% -s' resume 'brightnessctl -r'\
#          timeout 1800 'swaylock -e -f -F -i $HOME/Pictures/wallpapers/lockscreen.jpg -s fill' \
#          timeout 2700 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -e -f -F -i $HOME/Pictures/wallpapers/lockscreen.jpg -s fill'

exec swayidle -w \
         timeout 1200 'brightnessctl set 5% -s' resume 'brightnessctl -r'\
         timeout 2700 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
         before-sleep ''

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

input "1267:12643:ELAN260A:00_04F3:3163_Touchpad" {
    dwt enable
    tap enable
    natural_scroll enable
    middle_emulation enable
}

### Key bindings
#
# Basics:
#

    bindsym $mod+Return exec $term

    bindsym $mod+f exec $filemanager

    bindsym $mod+g exec $filesearcher

    bindsym $mod+b exec $browser

    bindsym $mod+p exec bash -c 'if [[ $(playerctl status) == "Playing" ]]; then playerctl pause; else playerctl play; fi'
    bindsym $mod+comma exec playerctl previous
    bindsym $mod+period exec playerctl next

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+Ctrl+F12 exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Screenshot:
#
    # Take a custom range screenshot then copy to clipboard
    bindsym $mod+shift+s exec grim -g "$(slurp -d)" - | wl-copy -t image/png
    # Take a fullscreen shot and pipe to satty for cropping and editing
    bindsym $mod+shift+e exec grim - | satty --filename -
    # Take a custom range screenshot then save and copy
    bindsym $mod+Shift+Ctrl+s exec bash -c '\
        if screenshot=$(slurp -d); then \
          grim -g "$screenshot" - | \
          tee ~/Pictures/screenshots/$(date +%Y-%m-%d_%H-%M-%S).png | \
          wl-copy -t image/png && \
          notify-send "Screenshot Copied & Saved"; \
        fi'
# Menu:
#
    # Application launcher
    # Man page: https://man.archlinux.org/man/extra/bemenu/bemenu.1.en
    set $launchapp exec bash launchapp.sh
    bindsym $mod+d exec $launchapp

    # Clipboard history
    set $cliphist exec bash cliphist.sh
    bindsym $mod+v exec $cliphist
#
# Power managements:
#
    set $powermenu exec bash powermenu.sh
    bindsym $mod+F12 exec $powermenu
#
# Open file
#
    set $openfile exec bash openfile.sh
    bindsym $mod+s exec $openfile
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    # bindsym $mod+b splith
    # bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+q layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+F11 fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"
#
# Utilities:
#
    # Special keys to adjust volume via PulseAudio
    set $volume exec bash volume.sh
    # Special keys to adjust volume via PulseAudio
    bindsym --locked XF86AudioMute exec $volume --action mute
    bindsym --locked XF86AudioLowerVolume exec $volume --action down
    bindsym --locked XF86AudioRaiseVolume exec $volume --action up
    bindsym --locked XF86AudioMicMute exec $volume --action micmute
    # Special keys to adjust brightness via brightnessctl
    bindsym --locked XF86MonBrightnessDown exec brightnessctl set 5%-
    bindsym --locked XF86MonBrightnessUp exec brightnessctl set 5%+
    # Special key to take a screenshot with grim
    bindsym Print exec grim

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    position top
    hidden_state hide
    mode hide
    wrap_scroll no
    workspace_buttons yes
    separator_symbol "|"
    
    font pango:Hack Nerd Font 9

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    # status_command while date +'%Y-%m-%d %X'; do sleep 1; done
    status_command statusbar.sh

    colors {
        statusline #ffffff
        background #363636
        focused_workspace #23658a #23658a #ffffff
        active_workspace #dc6000 #dc6000 #ffffff 
        inactive_workspace #202020 #202020 #7c7e7f
        urgent_workspace #c8302a #c8302a #ffffff
    }
}

include /etc/sway/config.d/*

# Autoruns
exec amixer sset Master 0%
exec brightnessctl set 100%
exec udiskie &
exec mako &
exec wl-paste --watch cliphist store

exec swaymsg 'workspace 1; exec firefox'
exec swaymsg 'workspace 2; exec alacritty'
