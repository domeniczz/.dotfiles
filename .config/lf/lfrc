set shell bash
set shellopts '-eu'
set ifs "\n"

set mouse
set hidden
set incsearch
set smartcase
set dircounts
set dirfirst
set number
set relativenumber
set scrolloff 4
set wrapscroll false
set ratios '1:3:4'

map Q :quit
map D :delete
map s shell
# show the result of execution of previous commands
map ` !true
map m
map mk :mkdir
map f
map ft :touch

cmd trash %set -f; trash $fx

cmd open ${{
  mime_type=$(file --mime-type -Lb "$f")
  case "$mime_type" in
    text/*|inode/x-empty|application/x-empty) nvim "$f";;
    application/pdf) zathura "$f" >/dev/null 2>&1 & ;;
    image/*) imv "$f" >/dev/null 2>&1 & ;;
    video/*) mpv "$f" >/dev/null 2>&1 & ;;
    audio/*) mpv "$f" >/dev/null 2>&1 & ;;
    application/x-tar|application/zip) tar tf "$f";;
    *) xdg-open "$f" >/dev/null 2>&1 & ;;
  esac
}}

cmd mkdir %{{
  printf "mkdir "
  read -r dirname
  [[ -z "$dirname" ]] && printf "\033[1A\033[K" && exit 0
  if [[ -e "$dirname" ]]; then
    printf "Error: '%s' already exists\n" "$dirname"
    exit 1
  fi
  mkdir -p "$dirname"
  printf "\033[1A\033[K"
}}

cmd touch %{{
  printf "touch "
  read -r filename
  [[ -z "$filename" ]] && printf "\033[1A\033[K" && exit 0
  if [ -e "$filename" ]; then
    printf "Error: '%s' already exists\n" "$filename"
    exit 1
  fi
  touch "$filename"
  printf "\033[1A\033[K"
}}

cmd extract ${{
  set -f
  case $f in
    *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
    *.tar.gz|*.tgz) tar xzvf $f;;
    *.tar.xz|*.txz) tar xJvf $f;;
    *.zip) unzip $f;;
    *.rar) unrar x $f;;
    *.7z) 7z x $f;;
  esac
}}
